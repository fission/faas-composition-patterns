#
# Simple workflow with two tasks: vision and translation.  A workflow
# is just a type of function.  The Vision task gets the workflow
# function's input and turns it into text.  The Translate task gets
# the Vision task's output and translates it.  The workflow function
# returns the Translate task's output as its own output.
#
apiVersion: 1
output: Translate  # The output of this workflow should be taken from
                   # the output of the Translate task below 
tasks:

  #
  # The vision task runs first because it has no dependencies on any
  # other task.
  #
  Vision:
    run: vision             # Run the 'vision' function
    inputs:
      method: POST
      headers:
        content-type: application/json
      default: "{ param() }"  # The workflow's inputs are accessed as param()

  #
  # A workflow-internal task to transform the output of the vision
  # task into a JSON object that the translation task accepts.
  #
  ComposeJson:
    run: compose
    inputs:
      text: "{$.Tasks.Vision.Output}"    # Data flow
      from: "en"
      to: "es"
    requires:
      - Vision

  # 
  # The translation task runs next.  It has two types of dependencies
  # on the Vision task: _control flow_ (what runs after what) and
  # _data flow_ (how one task's output gets to the other).
  #
  Translate:
    run: translation
    inputs:
      method: POST
      headers:
        content-type: application/json
      default: "{$.Tasks.ComposeJson.Output}"
    requires: 
    - ComposeJson                             # Control flow 
